{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","monster","email","CardList","monsters","map","name","Search","placeholder","handleChange","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","style","margin","type","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,GAAjC,4BACtB,6BAAKJ,EAAMK,UACX,4BAAKL,EAAMM,YCJVC,G,MAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,SAASC,KAAI,SAAAJ,GAAO,OACtB,cAAC,EAAD,CAEID,GAAIC,EAAQD,GACZC,QAASA,EAAQK,KACjBJ,MAAOD,EAAQC,OAHVD,EAAQD,WCPxBO,G,YAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAElC,OAEI,uBACIZ,UAAU,SACVW,YAAaA,EACbE,SAAUD,MC2CPE,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAcFF,aAAe,SAACG,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO3C,WAEE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQK,KAAKoB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UAEE,oBAAI+B,MAAO,CAAEC,OAAQ,KAArB,6BAEA,cAAC,EAAD,CACEC,KAAK,SACLtB,YAAY,iBACZC,aAAcc,KAAKd,eAGrB,cAAC,EAAD,CAAUL,SAAUoB,W,GAvCVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a19381c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt='monster' src={ `https://robohash.org/${props.id}?set=set2&size=180x180` }/>\r\n            <h2>{props.monster}</h2>\r\n            <p>{ props.email }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card\r\n                        key={monster.id}\r\n                        id={monster.id}\r\n                        monster={monster.name}\r\n                        email={monster.email} />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search.styles.css';\r\n\r\nexport const Search = ({ placeholder, handleChange }) => {\r\n\r\n    return (\r\n\r\n        <input\r\n            className=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n\r\n    );\r\n\r\n}\r\n","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { Search } from './components/search-box/search.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n  \n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n\n        <h1 style={{ margin: 100 }}>Monster Rolodex</h1>\n\n        <Search\n          type=\"search\"\n          placeholder='search monster'\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}